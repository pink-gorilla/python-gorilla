;; gorilla-repl.fileformat = 2

;; @@ [meta]
{}

;; @@

;; **
;;; # tech.ml.dataset - vega plots
;;; https://github.com/techascent/tech.ml.dataset/blob/master/CHANGELOG.mds
;; **

;; @@ [clj]
; Automatically Download Dependencies (if they are not installed already) 
 (use '[pinkgorilla.notebook.repl]) 
 (pinkgorilla.notebook.repl/add-dependencies 
  '[[techascent/tech.ml.dataset "2.0-beta-44"]
    [org.pinkgorilla/tech.viz "0.5.5"]])
nil
;; @@
;; =>
;;; ["^ ","~:type","~:html","~:content",["~:span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]
(ns tech.median-unemployed
  (:require 
   [tech.ml.dataset :as ds]
   [tech.v2.datatype.datetime.operations :as dtype-dt-ops]
   [tech.viz.vega :as vega]))
;; @@
;; =>
;;; ["^ ","~:type","~:html","~:content",["~:span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]
 ^:R [:p/vega "https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json" ]
;; @@
;; =>
;;; ["^ ","~:type","~:reagent","~:content",["^ ","~:hiccup",["~#with-meta",[["~:p/vega","https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json"],["^ ","~:R",true]]],"~:map-keywords",true,"~:widget",true]]
;; <=

;; **
;;; # Scatterplot
;; **

;; @@ [clj]
 (vega/scatterplot [{:a 1 :b 2} {:a 2 :b 3}] :a :b)
;; @@
;; =>
;;; ["^ ","~:type","~:reagent","~:content",["^ ","~:hiccup",["~#with-meta",[["^ ","~:$schema","https://vega.github.io/schema/vega/v5.json","~:autosize",["^ ","^0","fit","~:resize",true,"~:contains","padding"],"~:width",800,"~:height",450,"~:axes",[["^ ","~:scale","x","~:grid",true,"~:orient","bottom","~:title","~:a","~:domain",false],["^ ","^<","y","^=",true,"^>","left","^?","~:b","^@",false]],"~:scales",["~#list",[["^ ","~:zero",false,"~:name","x","^0","linear","~:round",true,"~:nice",true,"^@",["^ ","~:data","source","~:field","~:a"],"~:range","width"],["^ ","^C",false,"^D","y","^0","linear","^E",true,"^F",true,"^@",["^ ","^G","source","^H","~:b"],"^I","height"]]],"~:marks",[["^ ","~:encode",["^ ","~:update",["^ ","~:fill",["^ ","~:value","#222"],"~:stroke",["^ ","^N","#222"],"~:opacity",["^ ","^N",0.5],"~:shape",["^ ","^N","circle"],"~:x",["^ ","^H","~:a","^<","x"],"~:y",["^ ","^H","~:b","^<","y"]]],"~:from",["^ ","^G","source"],"^0","symbol"]],"^G",[["^ ","^D","source","~:values",[["^ ","~:a",1,"~:b",2],["^ ","~:a",2,"~:b",3]]]]],["^ ","~:p/render-as","~:p/vega"]]],"~:map-keywords",true,"~:widget",true]]
;; <=

;; **
;;; # Timeseries plots
;; **

;; @@ [clj]
(def location "https://fred.stlouisfed.org/graph/fredgraph.csv?bgcolor=%23e1e9f0&chart_type=line&drp=0&fo=open%20sans&graph_bgcolor=%23ffffff&height=450&mode=fred&recession_bars=on&txtcolor=%23444444&ts=12&tts=12&width=1168&nt=0&thu=0&trc=0&show_legend=yes&show_axis_titles=yes&show_tooltip=yes&id=UEMPMED&scale=left&cosd=1967-07-01&coed=2020-03-01&line_color=%234572a7&link_values=false&line_style=solid&mark_type=none&mw=3&lw=2&ost=-99999&oet=99999&mma=0&fml=a&fq=Monthly&fam=avg&fgst=lin&fgsnd=2009-06-01&line_index=1&transformation=lin&vintage_date=2020-04-17&revision_date=2020-04-17&nd=1967-07-01")

(def ds* (delay (ds/->dataset location)))
;; @@
;; =>
;;; ["^ ","~:type","~:html","~:content",["~:span",["^ ","~:class","clj-var"],"#'tech.median-unemployed/ds*"],"~:value","#'tech.median-unemployed/ds*"]
;; <=

;; @@ [clj]
(defn graph-ds
  []
  (-> @ds*
      (ds/update-column "DATE" dtype-dt-ops/get-epoch-milliseconds)
      (ds/interpolate-loess "DATE" "UEMPMED" {:bandwidth 0.01
                                              :iterations 2
                                              :result-name "UEMPMED-loess"})
      (ds/column-labeled-mapseq ["UEMPMED" "UEMPMED-loess"])
      (vega/time-series "DATE" :value {:label-key :label
                                       :background "white"})))
;; @@
;; =>
;;; ["^ ","~:type","~:html","~:content",["~:span",["^ ","~:class","clj-var"],"#'tech.median-unemployed/graph-ds"],"~:value","#'tech.median-unemployed/graph-ds"]
;; <=

;; @@ [clj]
(graph-ds)
;; @@

;; @@ [clj]
(ds/select (ds/->dataset "https://vega.github.io/vega/data/stocks.csv")
                 :all (range 5))
;; @@

;; @@ [clj]
(as-> (ds/->dataset "https://vega.github.io/vega/data/stocks.csv") ds
      ;;The time series chart expects time in epoch milliseconds
      (ds/add-or-update-column ds "year" (dtype-dt-ops/get-years (ds "date")))
      (ds/filter-column #{2007 2008 2009} "year" ds)
      (ds/update-column ds "date" dtype-dt-ops/get-epoch-milliseconds)
      (ds/mapseq-reader ds)
	  ;;all graphing functions run from pure clojure data.  No batteries required.
      (vega/time-series ds "date" "price"
                        {:title "Stock Price (2007-2010)"
                         :label-key "symbol"
                         :background "white"}))
;; @@

;; @@ [clj]

;; @@

;; @@ [clj]

;; @@
;; ->
;;; 
;; <-
;; =>
;;; ["^ ","~:type","html","~:value",["~:span"]]
;; <=
